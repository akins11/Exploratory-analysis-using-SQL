{"title":"3. Transaction Summary Of Customers","markdown":{"yaml":{"title":"3. Transaction Summary Of Customers"},"headingText":"| include: false","containsRefs":false,"markdown":"\n\n<hr>\n\n\n```{r}\nsource(\"C:/Users/AYOMIDE/Documents/R/R_Projects/eda_SQL/function.R\")\n```\n\n```{r}\n#| message: false\n#| warning: false\n#| include: false\nlibrary(RMariaDB)\nlibrary(DBI)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(dplyr)\n```\n\n\n```{r}\n#| message: false\n#| warning: false\n#| include: false\nmysqldb <- RMariaDB::dbConnect(\n  RMariaDB::MariaDB(), user =  \"root\", \n  host = \"localhost\",\n  password = Sys.getenv(\"password\"), \n  dbname = \"sales\"\n  )\n```\n\n\n### Given that the company sell products to both customers and businesses, let's get the total number of transaction conducted with each customers.\n\n```{sql}\n#| eval: false\nSELECT customer_names AS Customer, count(customer_names) AS Count\n  FROM customer\n  JOIN sales_order\n  \tON customer.customer_id = sales_order.customer_id\n  GROUP BY customer_names\n  ORDER BY Count DESC;\n```\n\n```{r}\n#| echo: false\nfetch_res(\n  \"\n  SELECT customer_names AS Customer, count(customer_names) AS Count\n  \tFROM customer\n    JOIN sales_order\n  \t\tON customer.customer_id = sales_order.customer_id\n  \tGROUP BY customer_names\n    ORDER BY Count DESC;\n  \"\n) |>\n  gt() |>\n  tbl_opts(container.height = px(380)) |>\n  gt_highlight_rows(rows = 1, font_weight = \"normal\", fill = \"#F7F7F7\")\n```\n\n<br>\n  \nFirst the number of customers that have made at least a single order or more over the\nthree year period is 50 and the top 3 customers based on the total unique transactions conducted are `Medline`, `Eminence Corp` & `Elorac, Corp`.\n\n\n### Now that we know the total number of unique customers and their overall transaction count, we can now proceed to the total order quantity and sales from each customer.\n```{sql}\n#| eval: false\nWITH cus_qos AS (\n      SELECT customer_id,\n             order_quantity,\n             (order_quantity * unit_price) AS sales\n        FROM sales_order\n)\nSELECT customer_names,\n       SUM(order_quantity) AS Total_Order_Quantity,\n       round(SUM(sales), 2) AS Total_Sales\n  FROM cus_qos\n  JOIN customer\n   ON cus_qos.customer_id = customer.customer_id\n  GROUP BY customer_names\n  ORDER BY Total_Sales DESC;\n```\n\n```{r}\n#| echo: false\nf <- fetch_res(\n  \"\n  WITH cus_qos AS (\n\t  SELECT customer_id,\n\t\t       order_quantity,\n\t\t       (order_quantity * unit_price) AS sales\n\t\t  FROM sales_order\n)\nSELECT customer_names,\n\t     SUM(order_quantity) AS Total_Order_Quantity,\n       round(SUM(sales), 2) AS Total_Sales\n\t FROM cus_qos\n   JOIN customer\n\t\t ON cus_qos.customer_id = customer.customer_id\n\t GROUP BY customer_names\n   ORDER BY Total_Sales DESC;\n  \"\n)\n\nf |>\n  cl_name() |>\n  gt() |>\n  fmt_number(columns = 2:3, decimals = 0) |>\n  tbl_opts(container.height = px(380)) |>\n  cols_align(align = \"center\", columns = 2:3) |>\n  gt_highlight_rows(columns = 2:3,\n                    rows = 1,\n                    font_weight = \"normal\", fill = \"#F7F7F7\")\n```\n\n<br>\n\nIt is no surprise that `Medline` is the customer with the highest number of\norder and sales given that they had the highest number of purchase transactions with the\ncompany.\n\n\n#### A quick dive into Medline and the amount of order and sales for each product.\n\n```{sql}\n#| eval: false\nWITH cus_prod_ors AS (\n      SELECT customer_id,\n             product_id,\n             order_quantity,\n             (order_quantity * unit_price) AS sales\n        FROM sales_order\n)\nSELECT product_name, \n       SUM(order_quantity) AS Total_Order_Quantity,\n       round(SUM(sales), 2) AS Total_Sales\n  FROM cus_prod_ors\n  JOIN customer\n  \t ON cus_prod_ors.customer_id = customer.customer_id\n  JOIN product\n  \t ON cus_prod_ors.product_id = product.product_id\n  WHERE customer_names = 'Medline'\n  GROUP BY product_name\n  ORDER BY Total_Sales DESC;\n```\n\n```{r}\n#| echo: false\nf <- fetch_res(\n  \"\n  WITH cus_prod_ors AS (\n\t    SELECT customer_id,\n\t\t         product_id,\n             order_quantity,\n\t\t         (order_quantity * unit_price) AS sales\n\t\tFROM sales_order\n)\nSELECT product_name,\n\t     SUM(order_quantity) AS Total_Order_Quantity,\n       round(SUM(sales), 2) AS Total_Sales\n\tFROM cus_prod_ors\n  JOIN customer\n\t\t ON cus_prod_ors.customer_id = customer.customer_id\n\tJOIN product\n\t\t ON cus_prod_ors.product_id = product.product_id\n\tWHERE customer_names = 'Medline'\n\tGROUP BY product_name\n  ORDER BY Total_Sales DESC;\n  \"\n)\n\nf |>\n  remove_str(product_name) |>\n  cl_name() |>\n  gt() |>\n  fmt_number(columns = 3) |>\n  cols_align(align = \"center\", columns = 2:3) |>\n  tbl_opts(container.height = px(380)) |>\n  gt_highlight_rows(rows = 1, font_weight = \"normal\", fill = \"#F7F7F7\")\n```\n\n<br>\n\nThe most purchased product from `Medline` is the `Floral` product with 48 orders\nand 144,023.2 in sales.\n\n\n\n### Moving forward, it is important to know which of the customers are bringing in the highest amount of profit for the business, so let's get the top 10 customers based on the total amount of profit made from the sales of products.\n\n```{sql}\n#| eval: false\nWITH cus_sp AS (\n      SELECT customer_id,\n             (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n        FROM sales_order\n)\nSELECT customer_names,\n       round(AVG(profit), 2) AS Average_Profit,\n       round(SUM(profit), 2) AS Total_Profit\n  FROM cus_sp\n  JOIN customer \n  \tON cus_sp.customer_id = customer.customer_id\n  GROUP BY customer_names\n  ORDER BY Total_Profit DESC\n  LIMIT 10;\n```\n\n```{r}\n#| echo: false\nf <- fetch_res(\n  \"\n  WITH cus_sp AS (\n\t   SELECT customer_id,\n            (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n\t\t   FROM sales_order\n)\nSELECT customer_names,\n\t     round(AVG(profit), 2) AS Average_Profit,\n       round(SUM(profit), 2) AS Total_Profit\n\tFROM cus_sp\n  JOIN customer\n\t\tON cus_sp.customer_id = customer.customer_id\n\tGROUP BY customer_names\n  ORDER BY Total_Profit DESC\n  LIMIT 10;\n  \"\n)\n\nf |>\n  cl_name() |>\n  gt() |>\n  fmt_number(columns = 2:3) |>\n  tbl_opts() |>\n  gt_highlight_rows(columns = 3, rows = 1, fill = \"#F7F7F7\") |>\n  gt_highlight_rows(columns = 2, rows = 8, fill = \"#F7F7F7\")\n```\n\n`Medline` maintains it position as the top customer with the highest profit made\nwhile `Trigen` had the highest average profit for all periods.\n\n\n\n### And lastly on customer exploration, it will be useful to get the highest amount spent on a particular product by a customer.\n\n```{sql}\n#| eval: false\nWITH prod_cus_sale AS (\n      SELECT customer_id,\n             product_id,\n             (order_quantity * unit_price) AS sales\n        FROM sales_order\n)\nSELECT customer_names, \n       product_name,\n       round(SUM(sales), 2) AS Total_Sales\n  FROM prod_cus_sale\n  JOIN customer\n  \tON prod_cus_sale.customer_id = customer.customer_id\n  JOIN product\n  \tON prod_cus_sale.product_id = product.product_id\n  GROUP BY customer_names, product_name\n  ORDER BY Total_Sales DESC\n  LIMIT 5;\n```\n\n```{r}\n#| echo: false\nf <- fetch_res(\n  \"\n  WITH prod_cus_sale AS (\n\t    SELECT customer_id,\n\t\t         product_id,\n             (order_quantity * unit_price) AS sales\n\t\t    FROM sales_order\n)\nSELECT customer_names,\n\t     product_name,\n       round(SUM(sales), 2) AS Total_Sales\n\tFROM prod_cus_sale\n  JOIN customer\n\t\tON prod_cus_sale.customer_id = customer.customer_id\n\tJOIN product\n\t\tON prod_cus_sale.product_id = product.product_id\n\tGROUP BY customer_names, product_name\n  ORDER BY Total_Sales DESC\n  LIMIT 5;\n  \"\n)\n\nf |>\n  remove_str(product_name) |>\n  cl_name() |>\n  gt() |>\n  fmt_number(columns = 3) |>\n  tbl_opts() |>\n  gt_highlight_rows(rows = 1, fill = \"#F7F7F7\")\n```\n\nCustomer `Eminence Corp` on the `Wardrobes` product.\n\n<br>\n\n<h3 class=\"insight-text\">Insight</h3>\n\n<p class=\"insight-summary\">\nAll customers have made 630 and above product order within the selected period and the top customer based on number of order, sales and profit is `Medline` while highest profit made on an average can from `Trigen`. \n</p>"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":false,"output-file":"customer.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.149","editor":"source","theme":["yeti","custom.scss"],"fontcolor":"#18020C","linkcolor":"#0000CD","title":"3. Transaction Summary Of Customers"},"extensions":{"book":{"multiFile":true}}}}}