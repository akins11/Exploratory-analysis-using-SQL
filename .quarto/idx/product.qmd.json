{"title":"2. Product Summary","markdown":{"yaml":{"title":"2. Product Summary"},"headingText":"| include: false","containsRefs":false,"markdown":"\n\n<hr>\n\n```{r}\nsource(\"C:/Users/AYOMIDE/Documents/R/R_Projects/eda_SQL/function.R\")\n```\n\n```{r}\n#| message: false\n#| warning: false\n#| include: false\nlibrary(RMariaDB)\nlibrary(DBI)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(dplyr)\n```\n\n\n```{r}\n#| message: false\n#| warning: false\n#| include: false\nmysqldb <- RMariaDB::dbConnect(\n  RMariaDB::MariaDB(), user =  \"root\", \n  host = \"localhost\",\n  password = Sys.getenv(\"password\"), \n  dbname = \"sales\"\n  )\n```\n\n\n### First let us get all the unique products sold during the selected period.\n```{sql}\n#| eval: false\nSELECT product_name, count(product_name) AS Count\n  FROM product\n  JOIN sales_order\n    ON product.product_id = sales_order.product_id\n  GROUP BY product_name\n  ORDER BY Count DESC;\n```\n\n\n```{r}\n#| echo: false\nfetch_res(\n  \"\n  SELECT product_name, count(product_name) AS Count\n  \tFROM product\n    JOIN sales_order\n  \t\tON product.product_id = sales_order.product_id\n    GROUP BY product_name\n    ORDER BY Count DESC;\n  \"\n) |>\n  remove_str(product_name) |>\n  cl_name() |>\n  gt() |>\n  tbl_opts(container.height = px(380)) |>\n  gt_highlight_rows(rows = 1:2, font_weight = \"normal\", fill = \"#F7F7F7\")\n```\n  \n<br>\n\nThere are 47 unique products sold from the above table and\n`Serveware & platters` have the highest number of unique transactions involved in,\nwhile the `pillows` product have the fewest.\n\n\n### Following the number of times each product was sold, what are the top 3 products\nbased on the number of order placed for them by customers?\n```{sql}\n#| eval: false\nSELECT product_name, SUM(order_quantity) AS Total_Order\n  FROM sales_order\n  JOIN product\n  \tON sales_order.product_id = product.product_id\n  GROUP BY product_name\n  ORDER BY Total_Order DESC\n  LIMIT 3;\n```\n\n```{r}\n#| echo: false\nfetch_res(\n  \"\n  SELECT product_name, SUM(order_quantity) AS Total_Order\n  \tFROM sales_order\n    JOIN product\n  \t\tON sales_order.product_id = product.product_id\n  \tGROUP BY product_name\n    ORDER BY Total_Order DESC\n    LIMIT 3;\n  \"\n) |>\n  remove_str(product_name) |>\n  cl_name() |>\n  gt() |>\n  tbl_opts()\n```\n\n<br>\n\nThe top 3 product by total number of order for all periods are `Accessories`,\n`Platters` and `Cocktail Glasses` with 585, 635 and 644 order respectively.\n\n\n\n### We know the top three must order products, let us get the cost based on\nAverage discount paid for each order to customers.\n```{sql}\n#| eval: false\nWITH prod_dis AS (\n    SELECT product_id,\n           (order_quantity * unit_price) * discount_applied AS discount\n      FROM sales_order\n)\nSELECT product_name, round(AVG(discount), 2) AS Average_Discount\n  FROM prod_dis\n  JOIN product\n  \tON prod_dis.product_id = product.product_id\n  GROUP BY product_name\n  ORDER BY Average_Discount DESC;\n```\n\n```{r}\n#| echo: false\nf <- fetch_res(\n  \"\n  WITH prod_dis AS (\n\t  SELECT product_id,\n\t\t       (order_quantity * unit_price) * discount_applied AS discount\n\t\t FROM sales_order\n)\nSELECT product_name, round(AVG(discount), 2) AS Average_Discount\n\tFROM prod_dis\n  JOIN product\n\t\tON prod_dis.product_id = product.product_id\n\tGROUP BY product_name\n  ORDER BY Average_Discount DESC;\n  \"\n)\n\nf |>\n  remove_str(product_name) |>\n  cl_name() |>\n  gt() |>\n  fmt_number(columns = 2) |>\n  tbl_opts(container.height = px(380)) |>\n  gt_highlight_rows(rows = 1, font_weight = \"normal\", fill = \"#DDDDDD\") |>\n  gt_highlight_rows(rows = 47, font_weight = \"normal\", fill = \"#F7F7F7\")\n```\n\n<br>\n\nThe highest average discount was paid for the `Mirror` product, while the\nlowest was paid for `Computers`.\n\n\n\n###  Profit summary of all products during:\n\n::: {.panel-tabset}\n\n## All\n```{sql}\n#| eval: false\nWITH prod_rev AS (\n    SELECT product_id,\n           (order_quantity * unit_price) AS sales,\n           ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS cost,\n           (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n\t FROM sales_order\n)\nSELECT product_name, \n       round(SUM(sales), 2) AS Total_Sales,\n       round(SUM(cost), 2) AS Total_Cost,\n       round(SUM(profit), 2) AS Total_Profit\n  FROM prod_rev pv\n  JOIN product p\n  \tON pv.product_id = p.product_id\n  GROUP BY product_name\n  ORDER BY Total_Profit DESC;\n```\n\n```{r}\n#| echo: false\nf <- fetch_res(\n  \"\n  WITH prod_rev AS (\n\tSELECT product_id,\n\t\t     (order_quantity * unit_price) AS sales,\n         ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS cost,\n         (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n\t FROM sales_order\n)\nSELECT product_name,\n\t     round(SUM(sales), 2) AS Total_Sales,\n       round(SUM(cost), 2) AS Total_Cost,\n       round(SUM(profit), 2) AS Total_Profit\n\tFROM prod_rev pv\n  JOIN product p\n\t\tON pv.product_id = p.product_id\n\tGROUP BY product_name\n  ORDER BY Total_Profit DESC;\n  \"\n)\n\nprod_sales_cost_profit_gt(f)\n```\n\n<br>\n\nAcross all sales period the highest amount of profit made from a single product\nis 651,232.19 e.i the `Accessories` products.\n\n\n## 2020\n```{sql}\n#| eval: false\nWITH prod_rev AS (\n    SELECT product_id,\n           year(order_date) AS order_year,\n           (order_quantity * unit_price) AS sales,\n           ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS cost,\n           (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n      FROM sales_order\n)\nSELECT product_name, \n       round(SUM(sales), 2) AS Total_Sales,\n       round(SUM(cost), 2) AS Total_Cost,\n       round(SUM(profit), 2) AS Total_Profit\n  FROM prod_rev pv\n  JOIN product p\n  \tON pv.product_id = p.product_id\n  WHERE order_year = 2020\n  GROUP BY product_name\n  ORDER BY Total_Profit DESC;\n```\n\n```{r}\n#| echo: false\nf <- fetch_res(\n  \"\n  WITH prod_rev AS (\n\t  SELECT product_id,\n\t\t       year(order_date) AS order_year,\n\t\t       (order_quantity * unit_price) AS sales,\n           ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS cost,\n           (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n\t\t FROM sales_order\n)\nSELECT product_name,\n\t     round(SUM(sales), 2) AS Total_Sales,\n       round(SUM(cost), 2) AS Total_Cost,\n       round(SUM(profit), 2) AS Total_Profit\n\tFROM prod_rev pv\n  JOIN product p\n\t\tON pv.product_id = p.product_id\n\tWHERE order_year = 2020\n\tGROUP BY product_name\n  ORDER BY Total_Profit DESC;\n  \"\n)\n\nprod_sales_cost_profit_gt(f)\n```\n\n<br>\n   \nIn 2020, more profit was made on the `Wall Frames` product than other products\nincluding `Accessories`.\n\n\n\n## 2019\n```{sql}\n#| eval: false\nWITH prod_rev AS (\n    SELECT product_id,\n           year(order_date) AS order_year,\n           (order_quantity * unit_price) AS sales,\n           ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS cost,\n           (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n      FROM sales_order\n)\nSELECT product_name, \n       round(SUM(sales), 2) AS Total_Sales,\n       round(SUM(cost), 2) AS Total_Cost,\n       round(SUM(profit), 2) AS Total_Profit\n  FROM prod_rev pv\n  JOIN product p\n  \tON pv.product_id = p.product_id\n  WHERE order_year = 2019\n  GROUP BY product_name\n  ORDER BY Total_Profit DESC;\n```\n\n```{r}\n#| echo: false\nf <- fetch_res(\n  \"\n  WITH prod_rev AS (\n\t  SELECT product_id,\n\t\t       year(order_date) AS order_year,\n\t\t       (order_quantity * unit_price) AS sales,\n           ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS cost,\n           (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n\t\t FROM sales_order\n)\nSELECT product_name,\n\t     round(SUM(sales), 2) AS Total_Sales,\n       round(SUM(cost), 2) AS Total_Cost,\n       round(SUM(profit), 2) AS Total_Profit\n\tFROM prod_rev pv\n  JOIN product p\n\t\tON pv.product_id = p.product_id\n\tWHERE order_year = 2019\n\tGROUP BY product_name\n  ORDER BY Total_Profit DESC;\n  \"\n)\n\nprod_sales_cost_profit_gt(f)\n```\n\n\n\n\n## 2018\n```{sql}\n#| eval: false\nWITH prod_rev AS (\n    SELECT product_id,\n           year(order_date) AS order_year,\n           (order_quantity * unit_price) AS sales,\n           ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS cost,\n           (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n      FROM sales_order\n)\nSELECT product_name, \n       round(SUM(sales), 2) AS Total_Sales,\n       round(SUM(cost), 2) AS Total_Cost,\n       round(SUM(profit), 2) AS Total_Profit\n  FROM prod_rev pv\n  JOIN product p\n  \tON pv.product_id = p.product_id\n  WHERE order_year = 2018\n  GROUP BY product_name\n  ORDER BY Total_Profit DESC;\n```\n\n```{r}\n#| echo: false\nf <- fetch_res(\n  \"\n  WITH prod_rev AS (\n\t  SELECT product_id,\n\t\t       year(order_date) AS order_year,\n\t\t       (order_quantity * unit_price) AS sales,\n           ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS cost,\n           (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n\t\t FROM sales_order\n)\nSELECT product_name,\n\t     round(SUM(sales), 2) AS Total_Sales,\n       round(SUM(cost), 2) AS Total_Cost,\n       round(SUM(profit), 2) AS Total_Profit\n\tFROM prod_rev pv\n  JOIN product p\n\t\tON pv.product_id = p.product_id\n\tWHERE order_year = 2018\n\tGROUP BY product_name\n  ORDER BY Total_Profit DESC;\n  \"\n)\n\nprod_sales_cost_profit_gt(f)\n```\n\n\n:::\n\n<br>\n\n<h3 class=\"insight-text\">Insight</h3>\n\n<p class=\"insight-summary\">\nA total of 47 different products was sold over the selected period of which the `Accessories` products have the highest total number of order, on the cost side an average of 1,511.28 was paid for the `Mirror` product which was the highest overall. Again the `Accessories` products was the most profitable product overall for all selected years and also in 2020.\n</p>"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":false,"output-file":"product.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.149","editor":"source","theme":["yeti","custom.scss"],"fontcolor":"#18020C","linkcolor":"#0000CD","title":"2. Product Summary"},"extensions":{"book":{"multiFile":true}}}}}