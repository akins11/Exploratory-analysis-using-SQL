{"title":"1. Exploring Business Sales Period","markdown":{"yaml":{"title":"1. Exploring Business Sales Period"},"headingText":"| include: false","containsRefs":false,"markdown":"\n<hr>\n\n<p class=\"into-text\">\nBefore we dive into exploring sales for the selected period, it is important to note that the sales database contains five table of fictitious records which will be used\nto demonstrate how exploration of a business historical sales records can be performed using MySQL DBMS. The analysis will involve looking into various key performance of selected entities based on several factors such as sales, cost, profit, etc.\n</p>\n\n\n```{r}\nsource(\"C:/Users/AYOMIDE/Documents/R/R_Projects/eda_SQL/function.R\")\n```\n\n```{r}\n#| message: false\n#| warning: false\n#| include: false\nlibrary(RMariaDB)\nlibrary(DBI)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(dplyr)\n```\n\n```{r}\n#| message: false\n#| warning: false\n#| include: false\nmysqldb <- RMariaDB::dbConnect(\n  RMariaDB::MariaDB(), user =  \"root\", \n  host = \"localhost\",\n  password = Sys.getenv(\"password\"), \n  dbname = \"sales\"\n  )\n```\n\n### The distinct Sales period.\n```{sql}\n#| eval: false\nSELECT DISTINCT year(order_date) AS Distinct_Year,   \n       COUNT(order_date) AS Number_Of_Transactions\n  FROM sales_order\n  GROUP BY Distinct_Year;\n```\n\n```{r}\n#| echo: false\nfetch_res(\n  \"SELECT DISTINCT year(order_date) AS Distinct_Year,\n\t\t\t    COUNT(order_date) AS Number_Of_Transactions\n  \tFROM sales_order\n    GROUP BY Distinct_Year;\"\n) |>\n  mutate(Number_Of_Transactions = as.integer(Number_Of_Transactions)) |>\n  cl_name() |>\n  gt() |>\n  fmt_number(columns = 2, decimals = 0) |>\n  tbl_opts()\n```\n \nThe selected sales record started from the year 2018 and ended in 2020 also there were more orders in 2020 than previous years.\n\n<br>\n\n#### Given the different number of product quantity order in each year, do all the sales years contain the full twelve 12 months.\n\n```{sql}\n#| eval: false\nSELECT tbl.order_year, \n       COUNT(tbl.order_month) AS number_of_distinct_month\n  FROM(SELECT order_date, \n              year(order_date) AS order_year,  \n              month(order_date) AS order_month\n      \t\tFROM sales_order\n      \t\tGROUP BY order_year, order_month\n      \t\tLIMIT 50) AS tbl\n  GROUP BY tbl.order_year;\n```\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\nfetch_res(\n  \"SELECT tbl.order_year,\n          COUNT(tbl.order_month) AS number_of_distinct_month\n  \tFROM(SELECT order_date,\n                year(order_date) AS order_year,\n                month(order_date) AS order_month\n      \t\tFROM sales_order\n      \t\tGROUP BY order_year, order_month\n      \t\tLIMIT 50) AS tbl\n  \tGROUP BY tbl.order_year;\"\n) |>\n  cl_name() |>\n  gt()\n```\n  \nApart from the year 2018 which only sales order records for 8 different months\nall other year have a complete 12 months.\n\n\n### Let's get the Summary of sales across previous sales years.\n```{sql}\n#| eval: false\nWITH sales_year AS (\n      SELECT year(order_date) AS order_year,\n             monthname(order_date) AS order_month,\n             (order_quantity * unit_price) AS sales\n        FROM sales_order\n)\nSELECT order_year, \n       MIN(sales) AS Minimum,\n       round(AVG(sales), 2) AS Average,\n       round(MAX(sales), 2) AS Maximum,\n       round(SUM(sales), 2) AS Total\n  FROM sales_year\n  GROUP BY order_year;\n```\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\nf <- fetch_res(\n  \"WITH sales_year AS (\n\t       SELECT year(order_date) AS order_year,\n\t\t            monthname(order_date) AS order_month,\n                (order_quantity * unit_price) AS sales\n\t\t        FROM sales_order\n  )\n  SELECT order_year,\n  \t     MIN(sales) AS Minimum,\n         round(AVG(sales), 2) AS Average,\n         round(MAX(sales), 2) AS Maximum,\n         round(SUM(sales), 2) AS Total\n  \tFROM sales_year\n    GROUP BY order_year;\"\n)\n\ncl_name(f) |>\n  gt() |>\n  fmt_number(2:5, decimals = 1) |>\n  tbl_opts()\n```\n \nMore sales was made in 2020 than the previous 2 years given the total amount,\nbut on an average the year 2018 had the highest amount followed by the preceding\nyears.\n\n\n### How much profit was made in previous sales years?\n```{sql}\n#| eval: false\nCREATE TEMPORARY TABLE rev_date_tbl\n  SELECT order_date,\n         year(order_date) AS order_year,\n         monthname(order_date) AS order_month,\n         order_quantity,\n         unit_price,\n         (order_quantity * unit_price) AS sales,\n         ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS cost,\n         (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n    FROM sales_order;\n```\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\nquery <- \"\nCREATE TEMPORARY TABLE rev_date_tbl\n\tSELECT order_date,\n\t\t     year(order_date) AS order_year,\n         monthname(order_date) AS order_month,\n         order_quantity,\n         unit_price,\n         (order_quantity * unit_price) AS sales,\n\t\t     ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS cost,\n\t\t     (order_quantity * unit_price) - ((order_quantity * unit_cost) + ((order_quantity * unit_price) * discount_applied)) AS profit\n\t\t FROM sales_order;\n\"\nresults <- dbSendQuery(mysqldb, query)\ndbClearResult(results)\n```\n\n\n```{sql}\n#| eval: false\nSELECT order_year, \n       round(AVG(profit), 2) AS Average_Profit, \n       round(SUM(profit), 2) AS Total_Proft \n  FROM rev_date_tbl\n  GROUP BY order_year;\n```\n\n```{r}\n#| echo: false\nfetch_res(\n  \"SELECT order_year,\n\t        round(AVG(profit), 2) AS Average_Profit,\n          round(SUM(profit), 2) AS Total_Proft\n  \tFROM rev_date_tbl\n    GROUP BY order_year;\"\n) |>\n  cl_name() |>\n  gt() |>\n  fmt_number(2:3, decimals = 2) |>\n  tbl_opts() |>\n  gt_highlight_rows(rows = 3, font_weight = \"normal\", fill = \"#F7F7F7\")  |>\n  gt_highlight_rows(rows = 3, columns = 3, font_weight = \"bold\", fill = \"#F7F7F7\")\n```\n\n<br>\n\nThe total amount of profit made in 2020 was the highest, this was closely\nfollowed by the year 2019 while for the average amount of profit the year\n2019 had the highest profit followed by 2018 and 2020.\n\n\n### Given the amount made in each of the last sales years, how much was made in each month for all recorded sales years.\n```{sql}\n#| eval: false\nSELECT order_month, \n       round(AVG(profit), 2) AS Average_Profit, \n       round(SUM(profit), 2) AS Total_Profit \n  FROM rev_date_tbl\n  GROUP BY order_month;\n```\n\n```{r}\n#| echo: false\nfetch_res(\n  \"\n  SELECT order_month,\n\t       round(AVG(profit), 2) AS Average_Profit,\n         round(SUM(profit), 2) AS Total_Profit\n  \tFROM rev_date_tbl\n    GROUP BY order_month;\n  \"\n) |>\n  mutate(order_month = factor(order_month, levels = month.name)) |>\n  arrange(order_month) |>\n  cl_name() |>\n  gt() |>\n  fmt_number(2:3, decimals = 2) |>\n  tbl_opts(container.height = px(380)) |>\n  gt_highlight_rows(rows = 3, font_weight = \"normal\", fill = \"#F7F7F7\") |>\n  gt_highlight_rows(rows = 3, columns = 3, font_weight = \"bold\", fill = \"#F7F7F7\") |>\n  gt_highlight_rows(rows = 11, font_weight = \"normal\", fill = \"#DDDDDD\") |>\n  gt_highlight_rows(rows = 11, columns = 3, font_weight = \"bold\", fill = \"#DDDDDD\") |>\n  gt_highlight_rows(rows = 1, columns = 2, font_weight = \"bold\", fill = \"#FFFFFF\")\n```\n\n<br>\n  \nThe month of November had the highest amount of profit for all three years,\nwhile January had the highest average profit. Also March in general had the\nlowest profit earned in a month.\n\n\n#### Now that We know that 2020 has the highest amount of the three years present, let's get the profit for each month in that year.\n```{sql}\n#| eval: false\nSELECT order_month,\n       round(AVG(profit), 2) AS Average_Profit, \n       round(SUM(profit), 2) AS Total_Profit \n  FROM rev_date_tbl\n  WHERE order_year = 2020\n  GROUP BY order_month\n  ORDER BY Total_Profit DESC;\n```\n\n```{r}\n#| echo: false\nfetch_res(\n  \"\n  SELECT order_month,\n\t       round(AVG(profit), 2) AS Average_Profit,\n         round(SUM(profit), 2) AS Total_Profit\n  \tFROM rev_date_tbl\n    WHERE order_year = 2020\n    GROUP BY order_month\n    ORDER BY Total_Profit DESC;\n  \"\n) |>\n  mutate(order_month = factor(order_month, levels = month.name)) |>\n  arrange(order_month) |>\n  cl_name() |>\n  rename(`2020: Order Month` = `Order Month`) |>\n  gt() |>\n  fmt_number(2:3, decimals = 2) |>\n  tbl_opts(container.height = px(380)) |>\n  gt_highlight_rows(rows = 3, font_weight = \"normal\", fill = \"#F7F7F7\") |>\n  gt_highlight_rows(rows = 3, columns = 3, font_weight = \"bold\", fill = \"#F7F7F7\") |>\n  gt_highlight_rows(rows = 1, font_weight = \"normal\", fill = \"#DDDDDD\") |>\n  gt_highlight_rows(rows = 1, columns = 2:3, font_weight = \"bold\", fill = \"#DDDDDD\") |>\n  gt_highlight_rows(rows = 10, columns = 2, font_weight = \"bold\", fill = \"#FFFFFF\")\n```\n\n<br>\n\nFor the year 2020 the highest amount of profit was made in January\nwhile the month with the lowest amount of profit is march, For the average profit\nmade across 2020, The highest amount was also made in January while\nOctober had the lowest average amount.\n\n\n<br>\n<br>\n\n\n<h3 class=\"insight-text\">Insight</h3>\n\n<p class=\"insight-summary\">\nThe number of transactions conducted in 2020 and 2019 are almost evenly distributed with the year 2020 having the largest number of transactions, sales and most importantly profit. November is the month with the most profit summed up for all the selected sales period but in 2020 the most profit was made during the first month of the year.\n<p/>"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":false,"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.149","editor":"source","theme":["yeti","custom.scss"],"fontcolor":"#18020C","linkcolor":"#0000CD","title":"1. Exploring Business Sales Period"},"extensions":{"book":{"multiFile":true}}}}}